#ifndef _SG_PUBLIC_
#define _SG_PUBLIC_

#pragma once

typedef enum
{
    SG_CVAR_UPDATE,
    SG_CVAR_REGISTER,
    SG_CVAR_SET,
    SG_CVAR_VARIABLESTRINGBUFFER,

    SG_MILLISECONDS,

    SG_PRINT,
    SG_ERROR,

    SG_RE_SETCOLOR,
    SG_RE_DRAWIMAGE,
    SG_RE_ADDPOLYTOSCENE,
    SG_RE_ADDPOLYLISTTOSCENE,
    SG_RE_ADDENTITYTOSCENE,
    SG_RE_REGISTERSHADER,
    SG_RE_CLEARSCENE,
    SG_RE_RENDERSCENE,
    
    SG_SND_REGISTERSFX,
    SG_SND_PLAYSFX,
    SG_SND_STOPSFX,
    SG_SND_ADDLOOPINGTRACK,
    SG_SND_CLEARLOOPINGTRACK,
    SG_SND_PLAYTRACK,

    SG_ADDCOMMAND,
    SG_REMOVECOMMAND,
    SG_ARGC,
    SG_ARGV,
    SG_ARGS,

    SG_KEY_GETCATCHER,
    SG_KEY_SETCATCHER,
    SG_KEY_ISDOWN,
    SG_KEY_GETKEY,
    SG_KEY_CLEARSTATES,
    SG_KEY_ANYDOWN,

    SG_GET_GPUCONFIG,
    SG_GET_CLIPBOARDATA,
    SG_CMD_EXECUTETEXT,
    SG_MEMORY_REMAINING,

    SG_G_LOADMAP,

    SG_FS_FOPENREAD,
    SG_FS_FOPENWRITE,
    SG_FS_FOPENAPPEND,
    SG_FS_FOPENRW,
    SG_FS_FILESEEK,
    SG_FS_FILETELL,
    SG_FS_FOPENFILE,
    SG_FS_FOPENFILEWRITE,
    SG_FS_FOPENFILEREAD,
    SG_FS_FCLOSE,
    SG_FS_WRITEFILE,
    SG_FS_WRITE,
    SG_FS_READ,
    SG_FS_FILELENGTH,
    SG_FS_GETFILELIST,

    SG_RE_LOADWORLDMAP,
    
    SG_G_SETBINDNAMES,

    // imgui api into the vm
    IMGUI_BEGIN_WINDOW = 400,
    IMGUI_END_WINDOW,
    IMGUI_IS_WINDOW_COLLAPSED,
    IMGUI_SET_WINDOW_COLLAPSED,
    IMGUI_SET_WINDOW_POS,
    IMGUI_SET_WINDOW_SIZE,
    IMGUI_SET_WINDOW_FONTSCALE,
    IMGUI_BEGIN_MENU,
    IMGUI_END_MENU,
    IMGUI_MENU_ITEM,
    IMGUI_SET_ITEM_TOOLTIP,
    IMGUI_INPUT_TEXT,
    IMGUI_INPUT_TEXT_MULTILINE,
    IMGUI_INPUT_TEXT_WITH_HINT,
    IMGUI_INPUT_FLOAT,
    IMGUI_INPUT_FLOAT2,
    IMGUI_INPUT_FLOAT3,
    IMGUI_INPUT_FLOAT4,
    IMGUI_INPUT_INT,
    IMGUI_INPUT_INT2,
    IMGUI_INPUT_INT3,
    IMGUI_INPUT_INT4,
    IMGUI_SLIDER_FLOAT,
    IMGUI_SLIDER_FLOAT2,
    IMGUI_SLIDER_FLOAT3,
    IMGUI_SLIDER_FLOAT4,
    IMGUI_SLIDER_INT,
    IMGUI_SLIDER_INT2,
    IMGUI_SLIDER_INT3,
    IMGUI_SLIDER_INT4,
    IMGUI_COLOR_EDIT3,
    IMGUI_COLOR_EDIT4,
    IMGUI_ARROW_BUTTON,
    IMGUI_CHECKBOX,
    IMGUI_GET_FONTSCALE,
    IMGUI_SET_CURSOR_POS,
    IMGUI_GET_CURSOR_POS,
    IMGUI_SET_CURSOR_SCREEN_POS,
    IMGUI_GET_CURSOR_SCREEN_POS,
    IMGUI_PUSH_COLOR,
    IMGUI_POP_COLOR,
    IMGUI_SAMELINE,
    IMGUI_NEWLINE,
    IMGUI_TEXT,
    IMGUI_COLOREDTEXT,
    IMGUI_SEPARATOR_TEXT,
    IMGUI_SEPARATOR,
    IMGUI_PROGRESSBAR,
    IMGUI_BEGIN_TABLE,
    IMGUI_END_TABLE,
    IMGUI_TABLE_NEXTROW,
    IMGUI_TABLE_NEXTCOLUMN,

    SG_FLOOR = 900,
    SG_CEIL,
    SG_ACOS,

    NUM_SGAME_IMPORT
} sgameImport_t;

typedef enum
{
    SGAME_INIT,
    SGAME_CONSOLE_COMMAND,
    SGAME_SHUTDOWN,
    SGAME_RUNTIC,
    SGAME_DRAW,
    SGAME_STARTLEVEL,
    SGAME_ENDLEVEL,
    SGAME_FINISH_FRAME,
    SGAME_KEY_EVENT,
    SGAME_MOUSE_EVENT,
    SGAME_EVENT_NONE,
    SGAME_EVENT_HANDLING,
    SGAME_REWIND_TO_LAST_CHECKPOINT,

    NUM_SGAME_EXPORT
} sgameExport_t;


#endif
